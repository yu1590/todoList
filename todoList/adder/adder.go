// Code generated by goctl. DO NOT EDIT.
// Source: todoList.proto

package adder

import (
	"context"

	"example.com/m/v2/todoList/todoList"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetTodoListReq     = todoList.GetTodoListReq
	GetTodoListResp    = todoList.GetTodoListResp
	SaveTodoListReq    = todoList.SaveTodoListReq
	SaveTodoListResp   = todoList.SaveTodoListResp
	SearchTodoListReq  = todoList.SearchTodoListReq
	SearchTodoListResp = todoList.SearchTodoListResp
	TodoList           = todoList.TodoList

	Adder interface {
		GetTodoList(ctx context.Context, in *GetTodoListReq, opts ...grpc.CallOption) (*GetTodoListResp, error)
		SearchTodoList(ctx context.Context, in *SearchTodoListReq, opts ...grpc.CallOption) (*SearchTodoListResp, error)
		SaveTodoList(ctx context.Context, in *SaveTodoListReq, opts ...grpc.CallOption) (*SaveTodoListResp, error)
	}

	defaultAdder struct {
		cli zrpc.Client
	}
)

func NewAdder(cli zrpc.Client) Adder {
	return &defaultAdder{
		cli: cli,
	}
}

func (m *defaultAdder) GetTodoList(ctx context.Context, in *GetTodoListReq, opts ...grpc.CallOption) (*GetTodoListResp, error) {
	client := todoList.NewAdderClient(m.cli.Conn())
	return client.GetTodoList(ctx, in, opts...)
}

func (m *defaultAdder) SearchTodoList(ctx context.Context, in *SearchTodoListReq, opts ...grpc.CallOption) (*SearchTodoListResp, error) {
	client := todoList.NewAdderClient(m.cli.Conn())
	return client.SearchTodoList(ctx, in, opts...)
}

func (m *defaultAdder) SaveTodoList(ctx context.Context, in *SaveTodoListReq, opts ...grpc.CallOption) (*SaveTodoListResp, error) {
	client := todoList.NewAdderClient(m.cli.Conn())
	return client.SaveTodoList(ctx, in, opts...)
}
